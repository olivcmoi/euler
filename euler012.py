#The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#Let us list the factors of the first seven triangle numbers:
# 1: 1
# 3: 1,3
# 6: 1,2,3,6
#10: 1,2,5,10
#15: 1,3,5,15
#21: 1,3,7,21
#28: 1,2,4,7,14,28
#We can see that 28 is the first triangle number to have over five divisors.
#
#What is the value of the first triangle number to have over five hundred divisors?
import math
def nombre_factor(value, listPremier):
	sqrt = int(math.sqrt(value));
	exposant = 0;
	result = 1;
	for index in range(0, len(listPremier)):
		if listPremier[index] < sqrt:
			while value % listPremier[index] == 0:
				exposant +=1;
				value = value / listPremier[index];
			if exposant > 0:
				result *= exposant+1;
			exposant = 0;
		else:
			break;
	return result;

def sieve_eratosthenes(limit):
	list = [];
	multiple = 0;
	list = range(0, limit);
	for i in list:
		if i >= 2:
			multiple = 2;
			while (i * multiple) < limit:
				list[i * multiple] = 0;
				multiple += 1;
	result = [];
	for i in list:
		if i > 1:
			result.append(i);
	return result;

index = 1;
sum = 0;
limit = 500;
listPremier = sieve_eratosthenes(8751);
while nombre_factor(sum, listPremier) <= limit:
	sum += index;
	index += 1;
print sum, nombre_factor(sum, listPremier);
